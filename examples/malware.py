#!/usr/bin/env python
#
#  AIEngine.
#
# Copyright (C) 2013  Luis Campo Giralte
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
# Boston, MA  02110-1301, USA.
#
# Written by Luis Campo Giralte <luis.camp0.2009@gmail.com> 2013
#
""" Example for integrate with malware domains """
__author__ = "Luis Campo Giralte"
__copyright__ = "Copyright (C) 2013 by Luis Campo Giralte"
__revision__ = "$Id$"
__version__ = "0.1"

import sys
import os
sys.path.append("../src/")
import pyaiengine

def callback_domain(flow_name):

    ip = str(flow_name).split(":")[0]
    domain = flow_name.getDNSDomain()
    if(domain):
        print("Malware on ip:%s domain:%s" % (ip,domain.getName())) 

def loadBadDomains():

    dm = pyaiengine.DomainNameManager()

    # List from http://www.malwaredomainlist.com/hostslist/hosts.txt
    # http://www.abuse.ch/zeustracker/blocklist.php?download=domainblocklist for ZeusDomains
    # Parse the file and add the domains.
    f = open("hosts.txt","r")

    lines = f.readlines()
    i = 0
    for line in lines:
        if( line[0] != "#"):
            domain = line.replace("\r\n","").split(" ")
            if(len(domain)> 2):
                name = "Bad domain %d" % i
                i = i +1
                dom = pyaiengine.DomainName(name,domain[2])
                dom.setCallback(callback_domain)

                dm.addDomainName(dom)
    f.close()
    return dm

if __name__ == '__main__':

     # Load an instance of a Network Stack on Mobile network (GN interface)
     st = pyaiengine.StackMobile()

     # Create a instace of a PacketDispatcher
     pdis = pyaiengine.PacketDispatcher()

     # Plug the stack on the PacketDispatcher
     pdis.setStack(st)

     doms = loadBadDomains()
     st.setDNSDomainNameManager(doms)

     # 1.638.400 UDP flows will be enough?
     st.setTotalUDPFlows(1638400)

     pdis.open("eth0")

     try:
         pdis.run()
     except:
         e = sys.exc_info()[0]
         print("Interrupt during capturing packets:",e)
     
     pdis.close()
 
     sys.exit(0)
